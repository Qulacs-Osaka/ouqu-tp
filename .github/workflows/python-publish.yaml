name: Package and release

on:
  release:
    types: [published]

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install poetry
      uses: abatilo/actions-poetry@v2

    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - name: Define a cache for the virtual environment based on the dependencies lock file
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install the project dependencies
      run: poetry install

    - name: Build
      run: poetry build

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: dist/
        if-no-files-found: error

  release:
    needs:
    - release-build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/ouqu-tp

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: release-dists
        path: dist/

    - name: Publish release distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/
